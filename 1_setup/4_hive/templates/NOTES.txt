CHART NAME: {{ .Chart.Name }}
CHART VERSION: {{ .Chart.Version }}
APP VERSION: {{ .Chart.AppVersion }}
{{ $psecret := include "common.names.fullname" (dict "Values" $.Values.postgresql "Chart" (dict "Name" "postgresql") "Release" $.Release) }}
{{- if .Values.postgresql.existingSecret -}}
{{- $psecret = .Values.postgresql.existingSecret -}}
{{- end -}}
Postgresql Chart Information:

** Please be patient while the chart is being deployed **

PostgreSQL can be accessed via port {{ template "postgresql.servicePort" (dict "Values" $.Values.postgresql "Chart" (dict "Name" "postgresql") "Release" $.Release)  }} on the following DNS names from within your cluster:

    {{ include "hive-metastore.postgres.endpoint" . }} - Read/Write connection

{{- if not (eq (include "hive-metastore.postgres.username" .) "postgres")  }}

To get the password for "postgres" run:

    export POSTGRES_ADMIN_PASSWORD=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ $psecret }} -o jsonpath="{.data.postgresql-postgres-password}" | base64 --decode)

{{ else }}

To get the password for "{{ include "hive-metastore.postgres.username" . }}" run:

    export POSTGRES_PASSWORD=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ $psecret }} -o jsonpath="{.data.postgresql-password}" | base64 --decode)

{{- end }}

To connect to your database run the following command:

    kubectl run {{ template "common.names.fullname" (dict "Values" $.Values.postgresql "Chart" (dict "Name" "postgresql") "Release" $.Release) }}-client --rm --tty -i --restart='Never' --namespace {{ .Release.Namespace }} --image {{ template "postgresql.image" (dict "Values" $.Values.postgresql "Chart" (dict "Name" "postgresql") "Release" $.Release) }} --env="PGPASSWORD=$POSTGRES_PASSWORD"
--command -- psql --host {{ template "common.names.fullname" (dict "Values" $.Values.postgresql "Chart" (dict "Name" "postgresql") "Release" $.Release) }} -U {{ include "hive-metastore.postgres.username" . }} -d {{ include "hive-metastore.postgres.database" . }} -p {{ template "postgresql.servicePort" (dict "Values" $.Values.postgresql "Chart" (dict "Name" "postgresql") "Release" $.Release) }}


To connect to your database from outside the cluster execute the following commands:

    kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ template "common.names.fullname" (dict "Values" $.Values.postgresql "Chart" (dict "Name" "postgresql") "Release" $.Release) }} {{ template "postgresql.servicePort" (dict "Values" $.Values.postgresql "Chart" (dict "Name" "postgresql") "Release" $.Release) }}:{{ template "postgresql.servicePort" (dict "Values" $.Values.postgresql "Chart" (dict "Name" "postgresql") "Release" $.Release) }} &
    PGPASSWORD="$POSTGRES_PASSWORD" psql --host 127.0.0.1 -U {{ include "hive-metastore.postgres.username" . }} -d {{ include "hive-metastore.postgres.database" . }} -p {{ template "postgresql.servicePort" (dict "Values" $.Values.postgresql "Chart" (dict "Name" "postgresql") "Release" $.Release) }}


Metastore Chart Information

*** Please wait - the deployment will take some time to be ready ***

Get the hive metastore URL by running these commands:

  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "hive-metastore.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:9083 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 9083:$CONTAINER_PORT
